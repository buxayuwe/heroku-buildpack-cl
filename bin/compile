#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# parse and derive params
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

import_env() {
  local name=$1
  [ -f $ENV_DIR/$name ] && export "$name=$(< $ENV_DIR/$name)"
}

import_env CL_IMPL
import_env CL_WEBSERVER
import_env RESET_CACHE

CL_DIR="$CACHE_DIR/$CL_IMPL"
echo "-----> compile params: $BUILD_DIR $CACHE_DIR $ENV_DIR"

if [ $RESET_CACHE ]; then
  echo "-----> flushing cache"
  rm -rf $CACHE_DIR/*
fi

echo "-----> CL_IMPL: $CL_IMPL"

USR_DIR=$CACHE_DIR/usr

ROSWELL_DIR=$CL_DIR/roswell
ROSWELL_REPO=https://github.com/snmsts/roswell.git
ROSWELL_BR=master

export ROSWELL_HOME=$CL_DIR/ros_home

ROS_COMMAND=$USR_DIR/bin/ros

if [ ! -f $ROS_COMMAND ]; then
  mkdir -p $USR_DIR
  mkdir -p $USR_DIR/bin
  mkdir -p $USR_DIR/lib
  mkdir -p $CL_DIR
  mkdir -p $ROSWELL_HOME

  echo "-----> ROSWELL"
  cd $CL_DIR

  echo "-----> ROSWELL: DOWNLOAD"
  git clone -b $ROSWELL_BR $ROSWELL_REPO --depth 1 1>/dev/null

  echo "-----> ROSWELL: BOOTSTRAP"
  cd $ROSWELL_DIR
  sh bootstrap 1>/dev/null
  ./configure --prefix=$USR_DIR 1>/dev/null

  echo "-----> ROSWELL: MAKE"
  make 1>/dev/null

  echo "-----> ROSWELL: MAKE INSTALL"
  make install 1>/dev/null

  echo "-----> ROSWELL: SETUP"
  $ROS_COMMAND setup 1>/dev/null
else
  echo "-----> ROSWELL ALREADY SETUP"
fi

case $CL_IMPL in
  sbcl)
    $ROS_COMMAND install sbcl-bin 1>/dev/null
    ;;
  ccl)
    $ROS_COMMAND install ccl-bin 1>/dev/null
    export CCL_DEFAULT_DIRECTORY=$CL_DIR # overwrite CCL_DEFAULT_DIRECTORY on ccl64
    ;;
  *)
    echo "-----> ! Please set CL_IMPL: heroku config:add CL_IMPL={sbcl|ccl}."
    exit 1
esac

echo "$CL_IMPL installed" | indent

echo "-----> CL_WEBSERVER: $CL_WEBSERVER"

case $CL_WEBSERVER in
  hunchentoot)
    ;;
  aserve)
    # setting up paths for building
    echo "-----> Getting patched versions of libraries"

    mkdir $CACHE_DIR/repos    # should be under an if to avoid error
    pushd $CACHE_DIR/repos

    if [ -d $CACHE_DIR/repos/portableaserve ]; then
         echo 'aserve already present'
         pushd portableaserve
         git pull origin master
         popd
    else
        git clone git://github.com/mtravers/portableaserve.git
    fi

    if [ -d $CACHE_DIR/repos/wuwei ]; then
         echo 'wuwei already present'
         pushd wuwei
         git pull origin master
         popd
    else
        git clone git://github.com/mtravers/wuwei.git
    fi

    popd
    ;;
  *)
    echo "-----> ! Please set CL_WEBSERVER: heroku config:add CL_WEBSERVER={hunchentoot|aserve}."
    exit 1
esac

export BUILDPACK_DIR
export CACHE_DIR
export BUILD_DIR

echo "-----> Starting build"
$ROS_COMMAND --load "$BUILDPACK_DIR/setup/compile.lisp"
echo "-----> Build finished"

chmod a+x $BUILD_DIR/lispapp
